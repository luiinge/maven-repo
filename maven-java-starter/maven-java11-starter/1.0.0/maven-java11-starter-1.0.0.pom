<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>maven-java-starter</groupId>
    <artifactId>maven-java11-starter</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>Maven Java starter</name>
    <description>Base configuration for Java 11 projects build with Maven</description>
    <url>https://github.com/luiinge/maven-java-starter/</url>
    <inceptionYear>2020</inceptionYear>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://repository.jboss.org/licenses/mit.txt</url>
        </license>
    </licenses>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/luiinge/maven-java-starter/issues</url>
    </issueManagement>


    <properties>
        <!-- properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <project.docdir>${project.build.directory}/doc</project.docdir>
        <project.docdir.javadoc>${project.docdir}/apidocs</project.docdir.javadoc>
        <project.docdir.coverage>${project.docdir}/coverage</project.docdir.coverage>
        <!-- dependencies -->
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <junit.version>4.13</junit.version>
        <hamcrest.version>2.2</hamcrest.version>
        <log4j.version>2.13.0</log4j.version>
        <assertj.version>3.16.1</assertj.version>
        <!-- build versions -->
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.compiler.release>11</maven.compiler.release>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.surefire.plugin>2.18.1</maven.surefire.plugin>
        <maven.failsafe.plugin>2.18.1</maven.failsafe.plugin>
        <jacoco.version>0.8.2</jacoco.version>
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
        <maven.javadoc.plugin.version>3.0.0</maven.javadoc.plugin.version> <!-- with 3.2.0 doesn't work! -->
        <surefire.report.version>3.0.0-M5</surefire.report.version>
        <maven.info.reports.version>3.1.0</maven.info.reports.version>
    </properties>


    <dependencies>
        <!-- api dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version><!--$NO-MVN-MAN-VER$ -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <dependencyManagement>
        <dependencies>
            <!-- in case log4j-slf4j-impl is used outside test, remove its dependency
                with slf4j-api, otherwise could conflict with the declared api version -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>






    <build>
        <plugins>
            <!-- specific version of maven compiler, since Java modules are not well
                managed in previous versions. Also, activate lint=all ) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <verbose>${verbose}</verbose>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Surefire with JaCoCo agent -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin}</version>
                <configuration>
                    <argLine>
                        ${surefireJacocoAgent} -Djdk.net.URLClassPath.disableClassPathURLCheck=true
                        --illegal-access=permit
                    </argLine>
                </configuration>
            </plugin>
            <!-- Failsafe with JaCoCo agent -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>
                                ${failsafeJacocoAgent} -Djdk.net.URLClassPath.disableClassPathURLCheck=true
                                --illegal-access=permit
                            </argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <append>true</append>
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                            <propertyName>surefireJacocoAgent</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <append>true</append>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <propertyName>failsafeJacocoAgent</propertyName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate additional jar with sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>




    <profiles>
        <!-- Generate Javadoc and test reports When called with -Dgenerate.doc -->
        <profile>
            <id>generate-doc</id>
            <activation>
                <property>
                    <name>generate.doc</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Clean documentation data -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>${maven.clean.plugin.version}</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${project.docdir}</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <!-- Generate Javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven.javadoc.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-javadoc</id>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <show>public</show>
                            <encoding>${project.reporting.outputEncoding}</encoding>
                            <excludePackageNames>*.internal;*.impl</excludePackageNames>
                            <quiet>true</quiet>
                            <noqualifier>all</noqualifier>
                            <reportOutputDirectory>${project.docdir.javadoc}</reportOutputDirectory>
                            <notimestamp>true</notimestamp>
                        </configuration>
                    </plugin>
                    <!-- Generate JaCoCo coverage report -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>generate-jacoco-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.docdir.coverage}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Generate Surefire report -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${surefire.report.version}</version>
                        <executions>
                            <execution>
                                <id>generate-surefire-report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report-only</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.docdir}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-failsafe-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>failsafe-report-only</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.docdir}</outputDirectory>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                    <!-- Generate general info reports -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven.info.reports.version}</version>
                        <executions>
                            <execution>
                                <id>generate-info-report</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.docdir}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>





</project>

